<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrar Venta</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <style>
        .form-control-cantidad {
            width: 75%;
        }
        .form-control-producto {
            width: 500px;
        }
        .form-control-stock {
            width: 100%;
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                <h2 class="text-center">Registrar Venta</h2>
            </div>
            <div class="card-body">
                <form id="ventaForm" action="/ventas/add" method="post">
                    <div class="form-group">
                        <label for="ClienteID">Cliente</label>
                        <select class="form-control" name="ClienteID" id="ClienteID" required>
                            {{#each clientes}}
                                <option value="{{this.ClienteID}}">{{this.Nombres}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="FechaVenta">Fecha y Hora de Venta</label>
                        <input type="datetime-local" class="form-control" name="FechaVenta" id="FechaVenta" required>
                    </div>
                    <div class="form-group">
                        <label>DETALLES:</label>
                        <div id="productos">
                            <div class="form-row">
                                <div class="col">
                                    <label>PRODUCTO</label>
                                    <select class="form-control form-control-producto" name="ProductoID[]" required onchange="updateProductDetails(this)">
                                        {{#each productos}}
                                            <option value="{{this.ProductoID}}" data-precio="{{this.Precio}}" data-stock="{{this.Stock}}">{{this.ProductoCompleto}}</option>
                                        {{/each}}
                                    </select>
                                </div>
                                <div class="col">
                                    <label>STOCK</label>
                                    <input type="text" class="form-control form-control-stock" readonly>
                                </div>
                                <div class="col">
                                    <label>CANTIDAD</label>
                                    <input type="number" class="form-control form-control-cantidad" name="Cantidad[]" min="0" required>
                                </div>
                                <div class="col">
                                    <label>PRECIO UNITARIO</label>
                                    <input type="number" class="form-control" name="PrecioUnitario[]" required readonly>
                                </div>
                                <div class="col">
                                    <label>TOTAL PRD</label>
                                    <input type="number" class="form-control" name="Totalproducto[]" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-3">
                            <label for="Total">Total</label>
                            <input type="number" class="form-control" name="Total" id="Total" step="0.01" required readonly>
                        </div>
                        <button type="button" class="btn btn-primary mt-2" id="addProduct">Agregar Producto</button>
                    </div>
                    <button type="submit" class="btn btn-success mt-4">Registrar Venta</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('addProduct').addEventListener('click', function() {
            const newProductRow = `<div class="form-row mt-2">
                <div class="col">
                    <label>PRODUCTO</label>
                    <select class="form-control form-control-producto" name="ProductoID[]" required onchange="updateProductDetails(this)">
                        {{#each productos}}
                            <option value="{{this.ProductoID}}" data-precio="{{this.Precio}}" data-stock="{{this.Stock}}">{{this.ProductoCompleto}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="col">
                    <label>STOCK</label>
                    <input type="text" class="form-control form-control-stock" readonly>
                </div>
                <div class="col">
                    <label>CANTIDAD</label>
                    <input type="number" class="form-control form-control-cantidad" name="Cantidad[]" min="0" required>
                </div>
                <div class="col">
                    <label>PRECIO UNITARIO</label>
                    <input type="number" class="form-control" name="PrecioUnitario[]" required readonly>
                </div>
                <div class="col">
                    <label>TOTAL PRD</label>
                    <input type="number" class="form-control" name="Totalproducto[]" readonly>
                </div>
            </div>`;
            document.getElementById('productos').insertAdjacentHTML('beforeend', newProductRow);
        });

        function updateProductDetails(selectElement) {
            const precio = selectElement.options[selectElement.selectedIndex].getAttribute('data-precio');
            const stock = selectElement.options[selectElement.selectedIndex].getAttribute('data-stock');
            const parentRow = selectElement.closest('.form-row');
            const stockInput = parentRow.querySelector('input.form-control-stock');
            const cantidadInput = parentRow.querySelector('input[name="Cantidad[]"]');
            const precioUnitarioInput = parentRow.querySelector('input[name="PrecioUnitario[]"]');
            const totalProductoInput = parentRow.querySelector('input[name="Totalproducto[]"]');

            stockInput.value = stock;
            precioUnitarioInput.value = precio;

            cantidadInput.addEventListener('input', function() {
                const cantidad = this.value;
                if (cantidad < 0) {
                    alert('Cantidad inválida. No se permiten valores negativos.');
                    this.value = '';
                    totalProductoInput.value = '';
                } else if (cantidad > stock) {
                    alert(`Stock inválido. Stock disponible: ${stock}`);
                    this.value = '';
                    totalProductoInput.value = '';
                } else {
                    totalProductoInput.value = (cantidad * precio).toFixed(2);
                }
                updateTotal();
            });

            function updateTotal() {
                let total = 0;
                document.querySelectorAll('input[name="Totalproducto[]"]').forEach(function(input) {
                    total += parseFloat(input.value) || 0;
                });
                document.getElementById('Total').value = total.toFixed(2);
            }
        }
    </script>
</body>
</html>
